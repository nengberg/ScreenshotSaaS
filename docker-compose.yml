version: '3.3'

services:
  screenshot-api:
    build:
      context: ./
      dockerfile: ./src/Screenshot.API/Dockerfile
    environment:
      - RabbitMqConnection__HostName=rabbitmq
      - RabbitMqConnection__Password=guest
      - RabbitMqConnection__Username=guest
      - MongoDbSettings__ConnectionString=mongodb://mongo:27017
    ports:
      - "5000:80"
    restart: on-failure
    volumes:
      - "./scripts/wait-for-it.sh:/app/wait-for-it.sh"
    entrypoint: ["bash", "-c" ,"./wait-for-it.sh rabbitmq:15672 -t 0; dotnet Screenshot.API.dll"]
    networks:
      - test
  screenshot-processor:
    build:
      context: ./
      dockerfile: ./src/Screenshot.Processor/Dockerfile
    environment:
      - RabbitMqConnection__HostName=rabbitmq
      - RabbitMqConnection__Password=guest
      - RabbitMqConnection__Username=guest
      - MongoDbSettings__ConnectionString=mongodb://mongo:27017
    restart: on-failure
    volumes:
      - "./scripts/wait-for-it.sh:/app/wait-for-it.sh"
    entrypoint: ["bash", "-c" ,"./wait-for-it.sh rabbitmq:15672 -t 0; dotnet Screenshot.Processor.dll"]
    networks:
      - test

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
        test:
          - "CMD"
          - "rabbitmqctl"
          - "status"
        interval: 10s
        timeout: 5s
        retries: 5
    networks:
      - test

  mongo:
    image: "mongo:latest"
    volumes:
      - ./data-node:/data/db
    ports:
      - 27017:27017
    networks:
      - test
  
  mongo-express:
    image: "mongo-express:latest"
    ports:
      - "8080:8081"
    restart: on-failure
    networks:
      - test

networks:
  test:
    driver: bridge